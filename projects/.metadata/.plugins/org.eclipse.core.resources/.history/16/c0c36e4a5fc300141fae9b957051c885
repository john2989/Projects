package stubs;
import java.io.IOException;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.omg.CORBA.portable.ValueOutputStream;

public class NYSEMapper extends Mapper<LongWritable, Text, Text, Text> {
	
	Text text1 = new Text();
	Text text2 = new Text();
	IntWritable intWritable = new IntWritable();

  @Override
  public void map(LongWritable key, Text value, Context context)
      throws IOException, InterruptedException {
	  String line = value.toString(); 
	  String divisions[]=line.split(",");
	  //String str="";
	  text1.set(divisions[1]+divisions[2]);
	  int i=divisions.length;
	  float high=0;
	  float low=0;
	  for(int j=3;j<i;j++)
	  {
		  if(Float.parseFloat(divisions[j+1])>Float.parseFloat(divisions[j]))
				  {
			       high=Float.parseFloat(divisions[j+1]);
				  }
		 // str=str+divisions[i];
	  }
	  for(int j=3;j<i;j++)
	  {
		  if(Float.parseFloat(divisions[j+1])<Float.parseFloat(divisions[j]))
				  {
			       low=Float.parseFloat(divisions[j+1]);
				  }
		 // str=str+divisions[i];
	  }
	 //text2.set(str);
	String str1=Float.toString(high);
	String str2=Float.toString(low);
	text2.set(str1+str2);
	 context.write(text1, text2); 
			  
		  
  }

  }

